version: '3.8'

services:
  todo-app:
    build:
      context: ./todo-app/app
    image: todo-app-image
    ports:
      - "8011:8000"
    depends_on:
      - kong
    networks:
      - dtodo_network

  nsqlookupd:
    image: nsqio/nsq:v1.2.0
    command: /nsqlookupd
    ports:
      - "4260:4160"
      - "4270:4161"
    networks:
      - dtodo_network

  nsqd:
    image: nsqio/nsq:v1.2.0
    ports:
      - "4250:4150"
      - "4251:4151"
      - "4261:4161"
    command: /nsqd --broadcast-address=nsqd --lookupd-tcp-address=nsqlookupd:4160
    networks:
      - dtodo_network

  nsqadmin:
    image: nsqio/nsq:v1.2.0
    ports:
      - "4271:4171"
    command: /nsqadmin --lookupd-http-address=nsqlookupd:4161
    networks:
      - dtodo_network

  consul:
    image: consul:1.8.0
    ports:
      - "8500:8500"
    command: consul agent -dev -client=0.0.0.0

  graylog:
    image: graylog/graylog:4.2
    environment:
      - GRAYLOG_PASSWORD_SECRET=someverysecuresecretkey
      - GRAYLOG_ROOT_PASSWORD_SHA2=1f7f8c9e7a740a0a5188adcc6e4e9dd1c02a408aba6525aec928d0bcd46f23de
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
    ports:
      - "9000:9000"
      - "12201:12201/udp"
    depends_on:
      - mongodb
      - elasticsearch
    links:
      - mongodb:mongo
      - elasticsearch
    networks:
      - dtodo_network


  mongodb:
    image: mongo:4.2
    networks:
      - dtodo_network

  sonarqube:
    image: sonarqube:8.9.6-community
    ports:
      - "9001:9000"

  prometheus:
    image: prom/prometheus:v2.29.1
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - dtodo_network

  loki:
    image: grafana/loki:2.2.1
    ports:
      - "3100:3100"
    volumes:
      - ./loki/local-config.yaml:/etc/loki/local-config.yaml
    networks:
      - dtodo_network

  promtail:
    image: grafana/promtail:2.2.1
    volumes:
      - /var/log:/var/log
      - ./promtail/config.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - dtodo_network

  grafana:
    image: grafana/grafana:8.2.0
    ports:
      - "3000:3000"
    networks:
      - dtodo_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - dtodo_network

  kong-database:
    image: postgres:13
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    networks:
      - dtodo_network

  kong-migrations:
    image: kong:2.5
    command: ["kong", "migrations", "bootstrap"]
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    depends_on:
      - kong-database
    networks:
      - dtodo_network

  kong:
    image: kong:2.5
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    depends_on:
      - kong-database
      - kong-migrations
    networks:
      - dtodo_network

networks:
  dtodo_network:
    driver: bridge